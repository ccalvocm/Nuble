{
    "metadata": {
        "title": "River with MRF",
        "description": "Example of a minimum residual flow constraint",
        "minimum_version": "0.1"
    },
    "timestepper": {
        "start": "2015-01-01",
        "end": "2015-12-31",
        "timestep": 1
    },
    "nodes": [
        {
            "name": "cuenca",
            "type": "catchment",
            "flow": 100
        },
        {
            "name": "rio",
            "type": "river"
        },
        {
            "name": "retorno",
            "type": "river"
        },
        {
            "name": "mrf",
            "type": "rivergauge",
            "mrf": "flowRequirement",
            "mrf_cost": -1000
        },
        {
            "name": "demanda1",
            "type": "output",
            "max_flow": "demanda1",
            "cost": -500
        },
        {
            "name": "demanda1Rem",
            "type": "output",
            "max_flow":"RemanenteDemanda1",
            "cost": -499
        },
        {
            "name": "demanda1RemI",
            "type": "input",
            "max_flow":"RemanenteDemanda1",
            "cost": -499
        },
        {
            "name": "demanda2",
            "type": "output",
            "max_flow": 200,
            "cost": -488
        }
    ],
    "edges": [
        ["cuenca", "rio"],
        ["rio", "mrf"],
        ["mrf", "demanda1Rem"],
        ["mrf", "demanda1"],
        ["demanda1Rem", "demanda1RemI"],
        ["demanda1RemI", "retorno"],
        ["rio", "retorno"],
        ["retorno", "demanda2"]
    ],
    "parameters": {
        "demanda1": {
            "type": "constant",
            "value":30
    },        
    "flowRequirement": {
        "type": "monthlyprofile",
        "values": [40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40]
    },
    "demanda1Negativa": {
        "type": "aggregated",
        "agg_func": "product",
        "parameters": [
            "demanda1",
            -1
        ]
    },
    "RemanenteDemanda1Prior": {
        "type": "aggregated",
        "agg_func": "sum",
        "parameters": [
            "flowRequirement",
            "demanda1Negativa"
        ]
    },
    "RemanenteDemanda1": {
        "type": "aggregated",
        "agg_func": "max",
        "parameters": [
            "RemanenteDemanda1Prior",
            0
        ]
    }
}   
}

